-- Удаление всех таблиц

DROP TABLE IF EXISTS PUBLIC.comments CASCADE;
DROP TABLE IF EXISTS PUBLIC.bookings CASCADE;
DROP TABLE IF EXISTS PUBLIC.items CASCADE;
DROP TABLE IF EXISTS PUBLIC.requests CASCADE;
DROP TABLE IF EXISTS PUBLIC.users CASCADE;

-- Создание таблицы users
CREATE TABLE IF NOT EXISTS users (
    user_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name    VARCHAR(50) NOT NULL,
    email   VARCHAR(50) NOT NULL UNIQUE
);

-- Создание таблицы requests
CREATE TABLE IF NOT EXISTS requests(
    request_id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    description  VARCHAR(100)                NOT NULL,
    requestor_id bigint                      NOT NULL REFERENCES users (user_id),
    create_date  TIMESTAMP WITHOUT TIME ZONE NOT NULL
);

-- Создание таблицы items
CREATE TABLE IF NOT EXISTS items (
    item_id      bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(200) NOT NULL,
    description  VARCHAR(200) NOT NULL,
    is_available boolean      NOT NULL,
    owner_id     bigint       NOT NULL REFERENCES users (user_id),
    request_id   bigint                REFERENCES requests (request_id)
);

-- Создание таблицы bookings
CREATE TABLE IF NOT EXISTS bookings (
    booking_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_date   TIMESTAMP WITHOUT TIME ZONE,
    item_id    bigint                      NOT NULL REFERENCES items (item_id),
    booker_id  bigint                      NOT NULL REFERENCES users (user_id),
    status     VARCHAR(20)                 NOT NULL,
    CONSTRAINT constr_status CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED'))
);

-- Создание таблицы comments
CREATE TABLE IF NOT EXISTS comments (
    comment_id  bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text        VARCHAR(1500) NOT NULL,
    item_id     bigint       NOT NULL REFERENCES items (item_id),
    author_name VARCHAR(50)  NOT NULL,
    create_date TIMESTAMP WITHOUT TIME ZONE NOT NULL
);
